[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aureon"
version = "1.0.0"
description = "A comprehensive AI/ML pipeline management system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "BLACK0X80", email = "black0x80@example.com"},
    {name = "AUREON Team", email = "contact@aureon.ai"}
]
maintainers = [
    {name = "BLACK0X80", email = "black0x80@example.com"},
    {name = "AUREON Team", email = "contact@aureon.ai"}
]
keywords = [
    "machine learning",
    "artificial intelligence", 
    "data science",
    "mlops",
    "pipeline",
    "automation",
    "model management",
    "api",
    "fastapi",
    "scikit-learn"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.1.0",
    "joblib>=1.2.0",
    "fastapi>=0.95.0",
    "uvicorn[standard]>=0.20.0",
    "sqlalchemy>=1.4.0",
    "pydantic>=1.10.0",
    "click>=8.0.0",
    "pyyaml>=6.0",
    "loguru>=0.6.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "reportlab>=3.6.0",
    "jinja2>=3.1.0",
    "psutil>=5.9.0",
    "schedule>=1.2.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0",
    "shap>=0.41.0",
    "lime>=0.2.0",
    "scipy>=1.9.0",
    "openpyxl>=3.0.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.4.0",
]

[project.urls]
Homepage = "https://github.com/aureon/aureon"
Documentation = "https://aureon.readthedocs.io/"
Repository = "https://github.com/aureon/aureon"
"Bug Tracker" = "https://github.com/aureon/aureon/issues"
Changelog = "https://github.com/aureon/aureon/blob/main/CHANGELOG.md"

[project.scripts]
aureon = "aureon.cli.main:cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["aureon*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
aureon = ["config/*.yaml", "config/*.json"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["aureon"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "shap.*",
    "lime.*",
    "schedule.*",
    "psutil.*",
    "reportlab.*",
    "plotly.*",
    "seaborn.*",
    "matplotlib.*",
    "loguru.*",
    "click.*",
    "fastapi.*",
    "uvicorn.*",
    "sqlalchemy.*",
    "pydantic.*",
    "pytest.*",
    "httpx.*",
    "rich.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["aureon"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
