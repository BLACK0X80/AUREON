name: Python Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel

    - name: Install dependencies
      run: |
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
        if [ -f setup.py ]; then
          pip install -e .
        fi

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        if [ -d tests ]; then
          pytest tests/ -v --cov=. --cov-report=term-missing
        else
          echo "No tests directory found, skipping tests"
        fi
      continue-on-error: true

    - name: Check code with mypy
      run: |
        pip install mypy
        mypy . --ignore-missing-imports || true
      continue-on-error: true

    - name: Security check with bandit
      run: |
        pip install bandit
        bandit -r . -f json -o bandit-report.json || true
      continue-on-error: true

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      continue-on-error: true
      
    - name: Build package
      run: |
        pip install build
        if [ -f setup.py ] || [ -f pyproject.toml ]; then
          python -m build
        fi
      continue-on-error: true
